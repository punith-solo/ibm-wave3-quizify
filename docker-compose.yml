version: "2"
services:
  mysql:
    image: mysql:5.7
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=Root@123
      - MYSQL_DATABASE=loginDB
    container_name: mysql
    network_mode: host
    hostname: 0.0.0.0

  mongo:
    image: mongo:3.4-jessie
    ports:
      - 27017:27017
    expose:
      - 27017
    container_name: mongo
    network_mode: host

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    restart: always
    network_mode: host
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    restart: always
    mem_limit: 2000000000
    ports:
      - "9092"
    depends_on:
      - zookeeper
    network_mode: host
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: localhost:2181
      KAFKA_MESSAGE_MAX_BYTES: 1000000000
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    # restart: always

  apigateway:
    image: zuul-service
    build: zuul-gatewayservice/
    restart: always
    network_mode: host
    depends_on:
      - eurekaserver
      - mysql
    ports:
      - 8092:8092
    expose:
      - 8092

  eurekaserver:
    image: eureka-servcie:latest
    build: eureka-server/
    restart: always
    network_mode: host
    container_name: eureka-server-docker
    ports:
      - 9091:9091
    expose:
      - 9091

  configserver:
    image: config-servcie:latest
    build: config-server/
    restart: always
    network_mode: host
    depends_on:
      - eurekaserver
      - mysql
    ports:
      - 8888:8888
    expose:
      - 8888


  user-login:
    image: user-service
    build: user-authentication/
    restart: always
    network_mode: host
    depends_on:
      - mysql
      - eurekaserver
      - configserver
      - apigateway
    ports:
      - 8095:8095
    expose:
      - 8095

  user-service:
    image: userservice
    build: userservice/
    restart: always
    network_mode: host
    depends_on:
      - mongo
      - eurekaserver
      - configserver
      - apigateway
      - kafka
    ports:
      - 8999:8999
    expose:
      - 8999


  question-manager-service:
    image: question-manager-service
    build: question-manager-service/
    restart: always
    network_mode: host
    depends_on:
      - kafka
      - mongo
      - eurekaserver
      - configserver
      - apigateway
    ports:
      - 8001:8001
    expose:
      - 8001


  game-manager:
    image: game-manager
    build: game-manager/
    restart: always
    network_mode: host
    depends_on:
      - kafka
      - mongo
      - eurekaserver
      - configserver
      - apigateway
    ports:
      - 8102:8102
    expose:
      - 8102
    #FRONT END

  quizify-front-end:
    build:  Quizify-FrontEnd/
    image:  quizify-front-end
    container_name:  quizify-front-end
    network_mode: "host"
    hostname: 0.0.0.0
    ports:
      - 4200:4200
    restart: always
    healthcheck:
      test: "exit 0"
