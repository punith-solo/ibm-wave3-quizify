version: "3"

services:

  apigateway:

    build: zuul-gatewayservice/

    depends_on:

      - eurekaserver

    expose:

      - 8092

    image: zuul-service

    network_mode: host

    ports:

      - "8092:8092"

    restart: always

  configserver:

    build: config-server/

    depends_on:

      - eurekaserver

    expose:

      - 8888

    image: "config-servcie:latest"

    network_mode: host

    ports:

      - "8888:8888"

    restart: always

  eurekaserver:

    build: eureka-server/

    container_name: eureka-server-docker

    expose:

      - 9091

    image: "eureka-servcie:latest"

    network_mode: host

    ports:

      - "9091:9091"

    restart: always

  game-manager:

    build: game-manager/

    depends_on:

      - kafka

      - mongo

      - eurekaserver

      - configserver

      - apigateway

    expose:

      - 8102

    image: game-manager

    network_mode: host

    ports:

      - "8102:8102"

    restart: always

  kafka:

    container_name: kafka

    depends_on:

      - zookeeper

    environment:

      KAFKA_ADVERTISED_HOST_NAME: localhost

      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"

      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"

      environment:

    image: wurstmeister/kafka

    network_mode: host

    ports: "9092:9092"

    restart: always

    volumes:

      - "/var/run/docker.sock:/var/run/docker.sock"

  mongo:

    container_name: mongo

    expose:

      - 27017

    image: "mongo:3.4-jessie"

    network_mode: host

    ports:

      - "27017:27017"

  mysql:

    container_name: mysql

    environment:

      - MYSQL_ROOT_PASSWORD=Root@123

      - MYSQL_DATABASE=loginDB

    image: "mysql:5.7"

    network_mode: host

    ports:

      - "3306:3306"

  question-manager-service:

    build: question-manager-service/

    depends_on:

      - kafka

      - mongo

      - eurekaserver

      - configserver

      - apigateway

    expose:

      - 8001

    image: question-manager-service

    network_mode: host

    ports:

      - "8001:8001"

    restart: always

  user-login:

    build: user-authentication/

    depends_on:

      - mysql

      - eurekaserver

      - configserver

      - apigateway

    expose:

      - 8095

    image: user-service

    network_mode: host

    ports:

      - "8095:8095"

    restart: always

  user-service:

    build: userservice/

    depends_on:

      - mongo

      - eurekaserver

      - configserver

      - apigateway

      - kafka

    expose:

      - 8999

    image: userservice

    network_mode: host

    ports:

      - "8999:8999"

    restart: always

  zookeeper:

    container_name: zookeeper

    environment:

      ZOOKEEPER_CLIENT_PORT: 2181

      ZOOKEEPER_TICK_TIME: 2000

      restart: always

    hostname: zookeeper

    image: wurstmeister/zookeeper

    ports:

      - "2181:2181"



